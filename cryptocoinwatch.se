# CryptoCoinWatch - Ethereum datafeed to watch the amount received of crypto currencies

shared:
    OWNER = 0x10
    SOURCE = 0x11
    MIN_CONFIRMATIONS = 0x12
    LAST_UPDATED = 0x13
    WATCH_LIST = 0x20
    ADDRESS_OFFSET = 2 ^ 160
    ADDRESS_MAX = 2 ^ 160
    ADDRESS_RECORD_SIZE = 4

    ADDRESS_RECEIVED_BY_ADDRESS = 0
    ADDRESS_LAST_UPDATED = 1
    ADDRESS_NR_WATCHED = 2
    ADDRESS_LAST_WATCHED = 3

init:
    contract.storage[OWNER] = msg.sender
    contract.storage[SOURCE] = "blockchain.info"
    contract.storage[MIN_CONFIRMATIONS] = 6

code:
    cmd = msg.data[0]
    if cmd == "suicide" and msg.sender == contract.storage[OWNER]:
        suicide(msg.sender)

    address = msg.data[1]
    if address > ADDRESS_MAX:
        return(0)
    address_idx = ADDRESS_OFFSET + address * ADDRESS_RECORD_SIZE

    if cmd == "watch":
        nr_watched = contract.storage[address_idx + ADDRESS_NR_WATCHED]

        # check if address isn't already watched
        if nr_watched > 0:
            contract.storage[address_idx + ADDRESS_NR_WATCHED] = nr_watched + 1
            contract.storage[address_idx + ADDRESS_LAST_WATCHED] = block.timestamp
            return(2)

        nr_contracts = contract.storage[WATCH_LIST]
        contract.storage[WATCH_LIST + nr_contracts + 1] = msg.data[1]
        contract.storage[WATCH_LIST] = nr_contracts + 1
        contract.storage[address_idx + ADDRESS_RECEIVED_BY_ADDRESS] = 0
        contract.storage[address_idx + ADDRESS_LAST_UPDATED] = 0
        contract.storage[address_idx + ADDRESS_NR_WATCHED] = 1
        contract.storage[address_idx + ADDRESS_LAST_WATCHED] = block.timestamp
        return(1)

    elif cmd == "getreceivedbyaddress":
        result = array(2)
        result[0] = contract.storage[address_idx + ADDRESS_RECEIVED_BY_ADDRESS]
        result[1] = contract.storage[address_idx + ADDRESS_LAST_UPDATED]
        return(result, 2)

    elif cmd == "setreceivedbyaddress" and msg.sender == contract.storage[OWNER]:
        contract.storage[address_idx + ADDRESS_RECEIVED_BY_ADDRESS] = msg.data[2]
        contract.storage[address_idx + ADDRESS_LAST_UPDATED] = block.timestamp
        contract.storage[LAST_UPDATED] = block.timestamp
        return(1)
    return(0)
